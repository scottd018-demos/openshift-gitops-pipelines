---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: s2i-deploy-git-docker
spec:
  params:
    - name: gitRepo
      type: string
      description: |
        The url of the public git repo to clone
    - name: gitAppDir
      type: string
      default: "./"
      description: |
        The directory within the gitRepo to use as a context-dir
    - name: appName
      type: string
      description: |
        The name of the app to deploy
    - name: appEnv
      type: string
      default: ""
      description: |
        The application environment to set on the app (only relevant on initial build).  Must be in KEY1=value1,KEY2=value2 format.
  steps:
    - name: s2i-deploy-git-docker
      image: registry.redhat.io/openshift4/ose-cli@sha256:0d21299d2adfa3cb74562c4dffbedd3b107fffac3a2a537f14770088abd4671f
      script: |
        #!/usr/bin/env bash
        set -e

        echo "setting env string..."
        ENV_STRING=""
        if [ -n "$(params.appEnv)" ]; then
          for PAIR in `echo $(params.appEnv) | tr ',' '\n'`; do
            KEY=`echo $PAIR | awk -F'=' '{print $1}'`
            VALUE=`echo $PAIR | awk -F'=' '{print $NF}'`

            ENV_STRING+="--env=$KEY=$VALUE"
          done

          echo "using env string $ENV_STRING"
        fi

        echo "setting subcommand string..."
        SUB_STRING=""
        if [ -z `oc get pods --no-headers -l deployment=$(params.appName) -o name` ]; then
          SUB_STRING="new-app"
        else
          SUB_STRING="new-build"
        fi

        # run the command
        echo "executing 'oc $SUB_STRING' command"
        oc $SUB_STRING $ENV_STRING \
          --name=$(params.appName) \
          --strategy=docker \
          --context-dir=$(params.gitAppDir) \
          $(params.gitRepo)
  stepTemplate:
    securityContext:
      runAsGroup: 0
